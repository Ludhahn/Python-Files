import Test

if __name__ == '__main__':
    def congruentModulo (a,b,n):
        return a % n == b % n

    print (congruentModulo(0,42,7))

    def congruentModulo2 (a,b,n):
        return Test.dist(a,b)% n == 0
    
    def fakultyFn (n):
        if n == 0:
            return 1
        elif n < 0:
            return Exception("No negative arguments allowed")
        else:
            i = 1
            s = 1
            while i <= n:
                s = (s * i)
                i += 1
            return s
    
    print (fakultyFn(3))


    print (1 << 8)
    
    def sumMod (a,b,n):
        return ((a + b ) % n)
    
    def prodMod (a,b,n):
        return ((a * b) % n)
    
    print (sumMod(3,2,6))
    print (prodMod(3,5,6))
    
    def digitSum(n):
        if n > 9:
            singleDigits = []
            while n > 0:
                singleDigits.append(n % 10)
                n //= 10
            while len(singleDigits) > 0:
                digit_sum = sum(singleDigits)
                return digit_sum
        elif n < 9 & n >= 0:        
            return n
        else:
            n = -n
            digitSum(n)
            
    def iterativeDigitSum(n):
        while n > 9:
            n = digitSum(n)
        return n
    
    print (digitSum(30))
    print (iterativeDigitSum(333333))